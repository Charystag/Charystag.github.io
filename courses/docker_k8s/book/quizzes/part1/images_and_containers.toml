[[questions]]
type = "MultipleChoice"
prompt.prompt = "Un conteneur Docker doit toujours être en cours d'exécution pour conserver des données. Est-ce vrai ou faux ?"
prompt.distractors = [
  "Vrai"
]
answer.answer = "Faux"
context = """
Les données peuvent être persistées dans des volumes ou des montages même si le conteneur n'est plus actif.
"""
id = "205941ce-0764-4490-9e58-4516032b28c7"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "Quelle commande est utilisée pour construire une image Docker à partir d'un Dockerfile ?"
prompt.distractors = [
  "docker pull",
  "docker run",
  "docker create"
]
answer.answer = "docker build"
context = """
La commande `docker build` permet de créer une image Docker à partir d'un fichier Dockerfile en spécifiant le chemin ou le contexte de construction.
"""
id = "67a3de6f-2eca-4a6b-aa19-a5af60e3971d"

[[questions]]
type = "ShortAnswer"
prompt.prompt = "Expliquez la différence entre `docker pull` et `docker build`."
answer.answer = "`docker pull` télécharge une image existante depuis un registre distant, tandis que `docker build` crée une nouvelle image localement à partir d'un Dockerfile."
context = """
`docker pull` interagit avec des registres distants comme DockerHub, tandis que `docker build` est utilisé pour construire des images personnalisées localement.
"""
id = "5f99be4f-b419-4105-849b-4908abf696c8"

[[questions]]
type = "ShortAnswer"
prompt.prompt = "Pour supprimer une image locale, vous utilisez la commande ___ ?"
answer.answer = "docker rmi"
context = """
La commande `docker rmi <nom_image>` supprime les images locales spécifiées par leur ID ou leur nom.
"""
id = "c223edaa-440e-4b41-a7bc-88ffe98e171d"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "Que se passe-t-il si vous modifiez un Dockerfile et reconstruisez l'image ?"
prompt.distractors = [
  "L'image précédente est écrasée.",
  "L'image précédente est supprimée.",
  "L'image précédente reste disponible mais est inutilisée."
]
answer.answer = "L'image précédente reste disponible mais est inutilisée."
context = """
Chaque construction d'image crée un nouvel identifiant unique. Les anciennes images restent accessibles sauf si elles sont explicitement supprimées.
"""
id = "5af753bc-0a8e-40aa-9d6d-e5fe32005129"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "La commande `docker exec` permet-elle d'interagir avec un conteneur en cours d'exécution ?"
prompt.distractors = [
  "Non",
  "Uniquement pour consulter les journaux",
  "Uniquement si le conteneur est interactif"
]
answer.answer = "Oui"
context = """
`docker exec` permet d'exécuter des commandes dans un conteneur actif, par exemple ouvrir un terminal avec `docker exec -it <nom_conteneur> bash`.
"""
id = "56273de0-b6c5-4634-af63-8241ad8a5126"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "Laquelle des options suivantes n'est pas un état valide pour un conteneur ?"
prompt.distractors = [
  "En cours d'exécution (running)",
  "Arrêté (stopped)",
  "Gelé (frozen)"
]
answer.answer = "Non configuré (unconfigured)"
context = """
Les états valides d'un conteneur incluent `running`, `stopped`, ou `paused`. Il n'existe pas d'état appelé `unconfigured`.
"""
id = "e30a457e-1473-4f0a-96a0-db01e6e1696e"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "Identifiez les étapes du cycle de vie d'un conteneur Docker : (Options : créer, exécuter, stopper, supprimer)"
prompt.distractors = [
  "Créer, stopper, supprimer",
  "Créer, exécuter, arrêter uniquement",
  "Créer, démarrer, supprimer uniquement"
]
answer.answer = "Créer, exécuter, stopper, supprimer"
context = """
Le cycle de vie d'un conteneur passe par les étapes : création, exécution, arrêt, et suppression éventuelle.
"""
id = "87ec29f3-263d-4d86-b673-b7cc380e0759"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "Quelle est la meilleure description du processus de push et de taggage d'une image sur DockerHub ?"
prompt.distractors = [
  "Vous taguez l'image avec `docker tag` et exécutez `docker save`.",
  "Vous exécutez `docker tag` suivi de `docker push` pour envoyer l'image sur DockerHub.",
  "Vous utilisez uniquement `docker push` sans taggage."
]
answer.answer = "Vous exécutez `docker tag` suivi de `docker push` pour envoyer l'image sur DockerHub."
context = """
Pour publier une image sur DockerHub, elle doit être taggée correctement avec le nom du registre et un tag, puis poussée avec `docker
"""
id = "1908a8ad-462b-404e-8445-e5a20bf3424c"
